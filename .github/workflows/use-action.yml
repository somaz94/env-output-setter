name: Example Workflow using Environment/Output Setter

on:
  workflow_dispatch:
    inputs:
      run:
        description: 'workflow run'
        required: true
        default: 'true'
  workflow_run:
    workflows: ["Create release"]  # release.yml의 name과 일치해야 함
    types:
      - completed


permissions:
  contents: read

jobs:
  action-module-v1:
    name: Test env-output-setter v1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout infrastructure repository
        uses: actions/checkout@v4

      - name: Set Environment and Output Variables
        id: set_variables
        uses: somaz94/env-output-setter@v1
        with:
          env_key: GCP_REGION,AWS_REGION,MULTI_REGION
          env_value: asia-northeast1,us-east-1,asia
          output_key: GCP_OUTPUT,AWS_OUTPUT,MULTI_OUTPUT
          output_value: gcp_success,aws_success,multi_success

      - name: Display Env and Output Variables
        run: |
          echo GCP_REGION: ${{ env.GCP_REGION }} # asis-northeast1
          echo AWS_REGION: ${{ env.AWS_REGION }} # us-east-1
          echo MULTI_REGION: ${{ env.MULTI_REGION }} # us-east-1
          echo GCP_OUTPUT: ${{ steps.set_variables.outputs.GCP_OUTPUT }} # gcp_success
          echo AWS_OUTPUT: ${{ steps.set_variables.outputs.AWS_OUTPUT }} # aws_success
          echo MULTI_OUTPUT: ${{ steps.set_variables.outputs.MULTI_OUTPUT }} # gcp_success

  acton-module-v2:
    name: Test env-output-setter v2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout infrastructure repository
        uses: actions/checkout@v4

      - name: Set Environment and Output Variables
        id: set_variables
        uses: somaz94/env-output-setter@v1
        with:
          # Default Key-Value Settings
          env_key: GCP_REGION,AWS_REGION,MULTI_REGION
          env_value: asia-northeast1,us-east-1,asia
          output_key: GCP_OUTPUT,AWS_OUTPUT,MULTI_OUTPUT
          output_value: gcp_success,aws_success,multi_success
          delimiter: ',' # Default, but specified as an example
          fail_on_empty: true # If empty value, fail
          trim_whitespace: true # Automatically remove whitespace
          case_sensitive: true # Key case sensitivity
          error_on_duplicate: true # Duplicate key error

      - name: Display Set Variables
        run: |
          echo "Env:"
          echo "GCP_REGION: ${{ env.GCP_REGION }}"
          echo "AWS_REGION: ${{ env.AWS_REGION }}"
          echo "MULTI_REGION: ${{ env.MULTI_REGION }}"
          
          echo -e "\nOutputs:"
          echo "GCP_OUTPUT: ${{ steps.set_variables.outputs.GCP_OUTPUT }}"
          echo "AWS_OUTPUT: ${{ steps.set_variables.outputs.AWS_OUTPUT }}"
          echo "MULTI_OUTPUT: ${{ steps.set_variables.outputs.MULTI_OUTPUT }}"
          
          echo -e "\nAction Results:"
          echo "Variables Set: ${{ steps.set_variables.outputs.set_env_count }}"
          echo "Outputs Set: ${{ steps.set_variables.outputs.set_output_count }}"
          echo "Status: ${{ steps.set_variables.outputs.status }}"
          echo "Error (if any): ${{ steps.set_variables.outputs.error_message }}"

      # 에러 처리 예시
      - name: Check for Errors
        if: steps.set_variables.outputs.status == 'failure'
        run: |
          echo "Error occurred: ${{ steps.set_variables.outputs.error_message }}"
          exit 1

  action-module-v3:
    name: Test env-output-setter v3
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 10

      - name: Configure Git Safe Directory
        run: git config --global --add safe.directory ${{ github.workspace }}

      - name: Test Value Transformation and Masking
        id: set_variables
        uses: somaz94/env-output-setter@v1
        with:
          # Basic key-value settings
          env_key: API_KEY,USERNAME,PASSWORD,URL_PARAM
          env_value: secret123,admin,pass123,hello world
          output_key: STATUS,DEBUG_MODE,API_VERSION,ENCODED_URL
          output_value: active,true,v1.0,hello world

          # Value transformation options
          to_upper: true
          to_lower: false
          encode_url: true

          # Masking options
          mask_secrets: true
          mask_pattern: '(password|secret).*'

          # Other options
          delimiter: ','
          fail_on_empty: true
          trim_whitespace: true
          case_sensitive: true
          error_on_duplicate: true

      - name: Display Environment Variables
        run: |
          echo "Environment Variables:"
          echo "API_KEY: ${{ env.API_KEY }}"
          echo "USERNAME: ${{ env.USERNAME }}"
          echo "PASSWORD: ${{ env.PASSWORD }}"
          echo "URL_PARAM: ${{ env.URL_PARAM }}"

      - name: Display Outputs
        run: |
          echo "Outputs:"
          echo "STATUS: ${{ steps.set_variables.outputs.STATUS }}"
          echo "DEBUG_MODE: ${{ steps.set_variables.outputs.DEBUG_MODE }}"
          echo "API_VERSION: ${{ steps.set_variables.outputs.API_VERSION }}"
          echo "ENCODED_URL: ${{ steps.set_variables.outputs.ENCODED_URL }}"

      - name: Display Action Results
        run: |
          echo "Action Results:"
          echo "Variables Set: ${{ steps.set_variables.outputs.set_env_count }}"
          echo "Outputs Set: ${{ steps.set_variables.outputs.set_output_count }}"
          echo "Status: ${{ steps.set_variables.outputs.status }}"
          echo "Error (if any): ${{ steps.set_variables.outputs.error_message }}"

      # Error handling
      - name: Check for Errors
        if: steps.set_variables.outputs.status == 'failure'
        run: |
          echo "Error occurred: ${{ steps.set_variables.outputs.error_message }}"
          exit 1

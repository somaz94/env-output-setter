name: Example Workflow using Environment/Output Setter

on:
  workflow_dispatch:
    inputs:
      run:
        description: 'workflow run'
        required: true
        default: 'true'
  workflow_run:
    workflows: ["Create release"]  # release.yml의 name과 일치해야 함
    types:
      - completed


permissions:
  contents: read

jobs:
  action-module-v1:
    name: Test env-output-setter v1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout infrastructure repository
        uses: actions/checkout@v4

      - name: Set Environment and Output Variables
        id: set_variables
        uses: somaz94/env-output-setter@v1
        with:
          env_key: GCP_REGION,AWS_REGION,MULTI_REGION
          env_value: asia-northeast1,us-east-1,asia
          output_key: GCP_OUTPUT,AWS_OUTPUT,MULTI_OUTPUT
          output_value: gcp_success,aws_success,multi_success

      - name: Display Env and Output Variables
        run: |
          echo GCP_REGION: ${{ env.GCP_REGION }} # asis-northeast1
          echo AWS_REGION: ${{ env.AWS_REGION }} # us-east-1
          echo MULTI_REGION: ${{ env.MULTI_REGION }} # us-east-1
          echo GCP_OUTPUT: ${{ steps.set_variables.outputs.GCP_OUTPUT }} # gcp_success
          echo AWS_OUTPUT: ${{ steps.set_variables.outputs.AWS_OUTPUT }} # aws_success
          echo MULTI_OUTPUT: ${{ steps.set_variables.outputs.MULTI_OUTPUT }} # gcp_success

  acton-module-v2:
    name: Test env-output-setter v2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout infrastructure repository
        uses: actions/checkout@v4

      - name: Set Environment and Output Variables
        id: set_variables
        uses: somaz94/env-output-setter@v1
        with:
          # Default Key-Value Settings
          env_key: GCP_REGION,AWS_REGION,MULTI_REGION
          env_value: asia-northeast1,us-east-1,asia
          output_key: GCP_OUTPUT,AWS_OUTPUT,MULTI_OUTPUT
          output_value: gcp_success,aws_success,multi_success
          delimiter: ',' # Default, but specified as an example
          fail_on_empty: true # If empty value, fail
          trim_whitespace: true # Automatically remove whitespace
          case_sensitive: true # Key case sensitivity
          error_on_duplicate: true # Duplicate key error

      - name: Display Set Variables
        run: |
          echo "Env:"
          echo "GCP_REGION: ${{ env.GCP_REGION }}"
          echo "AWS_REGION: ${{ env.AWS_REGION }}"
          echo "MULTI_REGION: ${{ env.MULTI_REGION }}"
          
          echo -e "\nOutputs:"
          echo "GCP_OUTPUT: ${{ steps.set_variables.outputs.GCP_OUTPUT }}"
          echo "AWS_OUTPUT: ${{ steps.set_variables.outputs.AWS_OUTPUT }}"
          echo "MULTI_OUTPUT: ${{ steps.set_variables.outputs.MULTI_OUTPUT }}"
          
          echo -e "\nAction Results:"
          echo "Variables Set: ${{ steps.set_variables.outputs.set_env_count }}"
          echo "Outputs Set: ${{ steps.set_variables.outputs.set_output_count }}"
          echo "Status: ${{ steps.set_variables.outputs.status }}"
          echo "Error (if any): ${{ steps.set_variables.outputs.error_message }}"

      # 에러 처리 예시
      - name: Check for Errors
        if: steps.set_variables.outputs.status == 'failure'
        run: |
          echo "Error occurred: ${{ steps.set_variables.outputs.error_message }}"
          exit 1

  action-module-v3:
    name: Test env-output-setter v3
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 10

      - name: Configure Git Safe Directory
        run: git config --global --add safe.directory ${{ github.workspace }}

      - name: Test Value Transformation and Masking
        id: set_variables
        uses: somaz94/env-output-setter@v1
        with:
          # Basic key-value settings
          env_key: API_KEY,USERNAME,PASSWORD,URL_PARAM
          env_value: secret123,admin,pass123,hello world
          output_key: STATUS,DEBUG_MODE,API_VERSION,ENCODED_URL
          output_value: active,true,v1.0,hello world

          # Value transformation options
          to_upper: true
          to_lower: false
          encode_url: true

          # Masking options
          mask_secrets: true
          mask_pattern: '(password|secret).*'

          # Other options
          delimiter: ','
          fail_on_empty: true
          trim_whitespace: true
          case_sensitive: true
          error_on_duplicate: true

      - name: Display Environment Variables
        run: |
          echo "Environment Variables:"
          echo "API_KEY: ${{ env.API_KEY }}"
          echo "USERNAME: ${{ env.USERNAME }}"
          echo "PASSWORD: ${{ env.PASSWORD }}"
          echo "URL_PARAM: ${{ env.URL_PARAM }}"

      - name: Display Outputs
        run: |
          echo "Outputs:"
          echo "STATUS: ${{ steps.set_variables.outputs.STATUS }}"
          echo "DEBUG_MODE: ${{ steps.set_variables.outputs.DEBUG_MODE }}"
          echo "API_VERSION: ${{ steps.set_variables.outputs.API_VERSION }}"
          echo "ENCODED_URL: ${{ steps.set_variables.outputs.ENCODED_URL }}"

      - name: Display Action Results
        run: |
          echo "Action Results:"
          echo "Variables Set: ${{ steps.set_variables.outputs.set_env_count }}"
          echo "Outputs Set: ${{ steps.set_variables.outputs.set_output_count }}"
          echo "Status: ${{ steps.set_variables.outputs.status }}"
          echo "Error (if any): ${{ steps.set_variables.outputs.error_message }}"

      # Error handling
      - name: Check for Errors
        if: steps.set_variables.outputs.status == 'failure'
        run: |
          echo "Error occurred: ${{ steps.set_variables.outputs.error_message }}"
          exit 1

  action-module-v4:
    name: Test env-output-setter v4
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 10

      - name: Configure Git Safe Directory
        run: git config --global --add safe.directory ${{ github.workspace }}

      - name: Test New Features
        id: set_variables
        uses: somaz94/env-output-setter@v1
        with:
          # 멀티라인 및 특수문자 테스트 (구분자를 '::'로 변경)
          env_key: "MULTILINE_TEXT::MAX_LENGTH_TEST::EMPTY_VALUE"
          env_value: "Hello\nWorld::ThisIsAVeryLongTextThatShouldBeTruncated::   "
          output_key: "PROCESSED_TEXT::TRUNCATED_TEXT::ALLOWED_EMPTY"
          output_value: "First Line\nSecond Line::AnotherLongTextToTest::   "

          # 새로운 옵션들 테스트
          escape_newlines: true        # \n을 \\n으로 변환
          max_length: 10              # 값을 10자로 제한
          allow_empty: true           # 빈 값 허용
          
          # 기본 옵션들
          delimiter: '::'             # 쉼표 대신 '::'를 구분자로 사용
          trim_whitespace: true
          case_sensitive: true
          error_on_duplicate: true
          fail_on_empty: true
          debug_mode: true           # 디버그 모드 활성화

      - name: Display Environment Variables
        run: |
          echo "Environment Variables:"
          echo "MULTILINE_TEXT: ${{ env.MULTILINE_TEXT }}"
          echo "MAX_LENGTH_TEST: ${{ env.MAX_LENGTH_TEST }}"
          echo "EMPTY_VALUE: '${{ env.EMPTY_VALUE }}'"

      - name: Display Outputs
        run: |
          echo "Outputs:"
          echo "PROCESSED_TEXT: ${{ steps.set_variables.outputs.PROCESSED_TEXT }}"
          echo "TRUNCATED_TEXT: ${{ steps.set_variables.outputs.TRUNCATED_TEXT }}"
          echo "ALLOWED_EMPTY: '${{ steps.set_variables.outputs.ALLOWED_EMPTY }}'"

      - name: Display Action Results
        run: |
          echo "Action Results:"
          echo "Variables Set: ${{ steps.set_variables.outputs.set_env_count }}"
          echo "Outputs Set: ${{ steps.set_variables.outputs.set_output_count }}"
          echo "Status: ${{ steps.set_variables.outputs.status }}"
          echo "Error (if any): ${{ steps.set_variables.outputs.error_message }}"

      # Error handling
      - name: Check for Errors
        if: steps.set_variables.outputs.status == 'failure'
        run: |
          echo "Error occurred: ${{ steps.set_variables.outputs.error_message }}"
          exit 1

  action-module-v5:
    name: Test Multiline Input
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Test Multiline
        id: test_multi
        uses: somaz94/env-output-setter@v1
        with:
          env_key: |
            MULTI_KEY1,
            MULTI_KEY2,
            MULTI_KEY3
          env_value: |
            first value,
            second value,
            third value
          output_key: |
            OUT_MULTI1,
            OUT_MULTI2,
            OUT_MULTI3
          output_value: |
            output one,
            output two,
            output three

      - name: Verify Multiline Results
        run: |
          echo "Environment Variables:"
          echo "MULTI_KEY1: ${{ env.MULTI_KEY1 }}"
          echo "MULTI_KEY2: ${{ env.MULTI_KEY2 }}"
          echo "MULTI_KEY3: ${{ env.MULTI_KEY3 }}"
          
          echo "Outputs:"
          echo "OUT_MULTI1: ${{ steps.test_multi.outputs.OUT_MULTI1 }}"
          echo "OUT_MULTI2: ${{ steps.test_multi.outputs.OUT_MULTI2 }}"
          echo "OUT_MULTI3: ${{ steps.test_multi.outputs.OUT_MULTI3 }}"